import pandas as pd
data = pd.read_csv('airquality.csv')
data.head()

print (data. isnull())

data.info()

data.describe()

data.isnull().sum()

data['Ozone'].mean()
data['Ozone'] = data['Ozone'].fillna(data['Ozone'].mean())
data.isnull().sum()

subSet1 = data[['Ozone', 'Month']]
subSet2 = data[['Ozone','Temp']]
subSet1.head()
subSet2.head()

concatenated_data = pd.concat([subSet1, subSet2], axis=1)
concatenated_data

def remove_outliers(column):
Q1 = column.quantile(0.25)
Q3 = column.quantile(0.75)
IQR = Q3 - Q1
threshold = 1.5 * IQR
outlier_mask = (column < Q1 - threshold) | (column > Q3 + threshold)
return column[~outlier_mask]
data.columns

data

from sklearn.preprocessing import LabelEncoder
col_label= ['Ozone','Temp','Month']
encoder = LabelEncoder()
for col in data.columns:
data[col] = encoder.fit_transform(data[col])
data

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
# Define features (X) and target variable (y)
X = data[['Ozone', 'Temp', 'Month']] # Example features
y = data['Solar.R'] # Example target variable
# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Create and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)
# Make predictions on the test set
y_pred = model.predict(X_test)
# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")
